#####################################################################
#   Outer Bed Heater Config
#####################################################################

[heater_generic heater_bed_outer]
heater_pin:PC8
max_power:1.0
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin:PC2
control = pid
pid_kp = 75.301
pid_ki = 1.383
pid_kd = 1025.032
min_temp:0
max_temp:120
pwm_cycle_time: 0.3

[verify_heater heater_bed_outer]    ; heating bed temperature tolerance configuration
max_error: 600                      ; maximum error
check_gain_time:120                 ; tolerance time
hysteresis: 10                      ; tolerance temperature
heating_gain: 1                     ; heating gain

[gcode_macro SET_BED_TEMPERATURE]   ; macros for innner & outer bed temperature depending on the print size
gcode:
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.TARGET}
    {% if printer["gcode_macro PRINT_START"].force_outer_bed_heater or not printer["gcode_macro PRINT_START"].small_print %}
      SET_HEATER_TEMPERATURE HEATER=heater_bed_outer TARGET={params.TARGET}
    {% endif %}

[gcode_macro BED_TEMPERATURE_WAIT]
gcode:
    {% if params.MINIMUM is defined and params.MAXIMUM is defined %}
      TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM} MAXIMUM={params.MAXIMUM}
      {% if printer["gcode_macro PRINT_START"].force_outer_bed_heater or not printer["gcode_macro PRINT_START"].small_print %}
        TEMPERATURE_WAIT SENSOR="heater_generic heater_bed_outer" MINIMUM={params.MINIMUM} MAXIMUM={params.MAXIMUM}
      {% endif %}
    {% elif params.MINIMUM is defined %}
      TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM}
      {% if printer["gcode_macro PRINT_START"].force_outer_bed_heater or not printer["gcode_macro PRINT_START"].small_print %}
        TEMPERATURE_WAIT SENSOR="heater_generic heater_bed_outer" MINIMUM={params.MINIMUM}
      {% endif %}
    {% elif params.MAXIMUM is defined %}
      TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM={params.MAXIMUM}
      {% if printer["gcode_macro PRINT_START"].force_outer_bed_heater or not printer["gcode_macro PRINT_START"].small_print %}
        TEMPERATURE_WAIT SENSOR="heater_generic heater_bed_outer" MAXIMUM={params.MAXIMUM}
      {% endif %}
    {% else %}
      RESPOND TYPE=error MSG="Error on 'BED_TEMPERATURE_WAIT': missing MINIMUM or MAXIMUM."
    {% endif %}

[gcode_macro M140]               ; redefine the existing M140
rename_existing: M99140
gcode:
    {% if params.S is defined %}
      SET_BED_TEMPERATURE TARGET={params.S|int}
    {% endif %}

[gcode_macro M141]
gcode:
    {% if params.S is defined %}
      SET_HEATER_TEMPERATURE HEATER=heater_bed_outer TARGET={params.S|int}
    {% endif %}

[gcode_macro M190]
rename_existing: M99190
gcode:    
    {% if params.S is defined %}
      SET_BED_TEMPERATURE TARGET={params.S|int}
      BED_TEMPERATURE_WAIT MINIMUM={(params.S|int)-2} MAXIMUM={(params.S|int)+4}
    {% endif %}

[gcode_macro M191]
gcode:
    {% if params.S is defined %}
      SET_HEATER_TEMPERATURE HEATER=heater_bed_outer TARGET={params.S|int}
      TEMPERATURE_WAIT SENSOR="heater_generic heater_bed_outer" MINIMUM={(params.S|int)-2} MAXIMUM={(params.S|int)+4}
    {% endif %}
